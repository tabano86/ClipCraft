---
name: "Build, Test, Publish & Enhance Repository UI"
"on":
  push:
    branches:
    - "main"
  pull_request:
    branches:
    - "main"
permissions:
  contents: "write"
  id-token: "write"
jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
    - name: "Checkout Repository (Full History)"
      uses: "actions/checkout@v3"
      with:
        fetch-depth: 0
    - name: "Set up JDK 17"
      uses: "actions/setup-java@v3"
      with:
        distribution: "temurin"
        java-version: 17
    - name: "Ensure gradlew is Executable"
      run: "chmod +x ./gradlew"
    - name: "Cache Gradle Directories"
      uses: "actions/cache@v3"
      with:
        path: "~/.gradle/caches\n~/.gradle/wrapper\n.gradle\n"
        key: "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties')\
          \ }}"
    - name: "Run Dependency Updates Check"
      run: "./gradlew dependencyUpdates --no-daemon --stacktrace --parallel"
    - name: "Run Quality Checks, Tests, and Build Plugin"
      run: "./gradlew clean test buildPlugin patchPluginXml spotlessCheck detekt jacocoTestReport\
        \ --no-daemon --stacktrace --parallel"
    - name: "Upload Plugin Artifact"
      uses: "actions/upload-artifact@v4"
      with:
        name: "plugin-distribution"
        path: "build/distributions/*.zip"
  release:
    needs: "build"
    if: "github.event_name == 'push'"
    runs-on: "ubuntu-latest"
    steps:
    - name: "Checkout Full Repository History"
      uses: "actions/checkout@v3"
      with:
        fetch-depth: 0
    - name: "Set up JDK 17 (Temurin)"
      uses: "actions/setup-java@v3"
      with:
        distribution: "temurin"
        java-version: 17
    - name: "Make gradlew Executable"
      run: "chmod +x ./gradlew"
    - name: "Cache Gradle Dependencies"
      uses: "actions/cache@v3"
      with:
        path: "~/.gradle/caches\n~/.gradle/wrapper\n.gradle\n"
        key: "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties')\
          \ }}"
    - name: "Configure Git Remote for Authenticated Push"
      run: "git config user.name \"${{ github.actor }}\"\ngit config user.email \"\
        ${{ github.actor }}@users.noreply.github.com\"\ngit remote set-url origin\
        \ https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository\
        \ }}\n"
    - name: "Synchronize Repository with Remote"
      run: "git fetch --prune --tags\ngit reset --hard origin/main\n"
    - name: "Clean Workspace"
      run: "git reset --hard\ngit clean -fdx\n"
    - name: "Recheck gradlew Executable Permission"
      shell: "bash"
      run: "chmod +x ./gradlew"
    - name: "Publish Plugin with Retry"
      uses: "nick-fields/retry@v3"
      with:
        max_attempts: 3
        timeout_minutes: 5
        command: "bash -c \"set -x; \\\ngit add -A && (git commit -m 'chore: update\
          \ version files pre-release' || echo 'No changes to commit') && \\\ngit\
          \ push origin main && \\\n./gradlew release publishPlugin --no-daemon --stacktrace\
          \ --parallel\"\n"
      env:
        ORG_GRADLE_PROJECT_intellijPlatformPublishingToken: "${{ secrets.JB_PLUGIN_REPOSITORY_TOKEN\
          \ }}"
    - name: "Create GitHub Release"
      uses: "softprops/action-gh-release@v1"
      with:
        tag_name: "${{ github.ref }}"
        name: "Release ${{ github.ref }}"
        body: "New release of the plugin publishedâ€”enjoy the automated goodness!"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  update-ui:
    needs: "release"
    if: "github.event_name == 'push'"
    runs-on: "ubuntu-latest"
    steps:
    - name: "Update Repository Topics and Description"
      uses: "actions/github-script@v6"
      with:
        script: "const topics = ['plugin', 'ci', 'automation', 'goodies', 'release'];\n\
          await github.rest.repos.replaceAllTopics({\n  owner: context.repo.owner,\n\
          \  repo: context.repo.repo,\n  names: topics\n});\nawait github.rest.repos.update({\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  description:\
          \ \"Automated Build, Test, Publish & UI Enhancements workflow powered by\
          \ prebuilt actions.\"\n});\n"
  post-release-comment:
    needs: "release"
    runs-on: "ubuntu-latest"
    steps:
    - name: "Post Release Announcement Comment"
      uses: "peter-evans/create-or-update-comment@v3"
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        issue-number: 1
        body: ":tada: A new release [${{ github.ref }}](https://github.com/${{ github.repository\
          \ }}/releases/tag/${{ github.ref }}) has been published!\n- Build, Test,\
          \ and Publish workflow executed successfully.\n- Repository UI has been\
          \ enhanced with updated topics and description.\n"
