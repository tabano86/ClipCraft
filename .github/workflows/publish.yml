name: Build, Test, and Publish Plugin

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  id-token: write

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      # Fetch full history (required for tag-based versioning)
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: temurin
#          java-version: '17'
#
#      - name: Make gradlew Executable
#        run: chmod +x ./gradlew
#
#      - name: Cache Gradle Directories
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#            .gradle
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
#
#      - name: Run Tests and Build Plugin
#        run: |
#          ./gradlew clean test buildPlugin patchPluginXml --no-daemon --stacktrace --parallel
#
#      - name: Upload Plugin Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: plugin-distribution
#          path: build/distributions/*.zip

  release:
#    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (Full History)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Ensure gradlew is Executable
        run: chmod +x ./gradlew

      - name: Cache Gradle Directories
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Configure Git Remote for Tag Push
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          # Reset the remote URL to use the built-in GITHUB_TOKEN for authentication.
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Sync Repository with Remote
        run: |
          git fetch --prune --tags
          git reset --hard origin/main

      - name: Publish Plugin with Retry
        # Uses the action-retry action to automatically retry the publish command up to 3 times.
        uses: dawidd6/action-retry@v2
        with:
          max_attempts: 3
          sleep: 10
          command: bash ./gradlew release publishPlugin --no-daemon --stacktrace --parallel
        env:
          # Provide your JetBrains token via the environment variable so Gradle sets the property
          ORG_GRADLE_PROJECT_intellijPlatformPublishingToken: ${{ secrets.JB_PLUGIN_REPOSITORY_TOKEN }}
