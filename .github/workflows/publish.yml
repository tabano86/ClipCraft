name: Build and Publish Plugin

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    # 1) Add "permissions" block to give the GITHUB_TOKEN write access to code
    permissions:
      contents: write  # needed for pushing tags or commits

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle Files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Set up Git config so we can push tags
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          # Force the remote to use token-based HTTPS auth:
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/tabano86/ClipCraft.git

      - name: Run Release
        if: github.event_name == 'push'
        run: ./gradlew release --no-daemon --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests
        run: ./gradlew clean test --no-daemon --stacktrace

      - name: Build Plugin
        run: ./gradlew clean buildPlugin --no-daemon --stacktrace

      - name: Patch Plugin XML
        run: ./gradlew patchPluginXml --no-daemon --stacktrace

      - name: Publish Plugin
        if: github.event_name == 'push'
        env:
          JB_PLUGIN_REPOSITORY_TOKEN: ${{ secrets.JB_PLUGIN_REPOSITORY_TOKEN }}
        run: ./gradlew publishPlugin -Ptoken=$JB_PLUGIN_REPOSITORY_TOKEN --no-daemon --stacktrace
